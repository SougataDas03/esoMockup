<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_1040502_eso_mo_0.RFIHandler</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>RFIHandler</name>
        <script><![CDATA[var RFIHandler = Class.create();
RFIHandler.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

    type: 'RFIHandler',

    getPreviousApprovers: function(parent) {
        var approver = [];
        var parentId = this.getParameter('sysparm_parentid') || parent;

        var gr = new GlideRecord('sysapproval_approver');
        gr.addQuery('document_id', parentId);
        gr.addQuery('state', 'approved');
        gr.query();

        while (gr.next()) {
            approver.push({
                label: gr.approver.name.getDisplayValue(),
                id: gr.approver.sys_id.getDisplayValue()
            });
        }

		gs.info("TESTING VALUE "+JSON.stringify(approver))
        return JSON.stringify(approver);
    },

    handleRFI: function(parent,userid,afterRFI,rfiRecipient,previousApprover,cmmnt) {
        var incParent = this.getParameter('sysparm_inc_parent') || parent;
        var currentUserSysId = this.getParameter('sysparm_current_user') || userid;
        var after_rfi = this.getParameter('sysparm_after_rfi') || afterRFI;
        var rfi_recipient = this.getParameter('sysparm_rfi_recipient') || rfiRecipient;
        var previous_approver = this.getParameter('sysparm_previous_approver') || previousApprover;
        var comment = this.getParameter('sysparm_inc_comments') || cmmnt;
        var approvalGrp;

		gs.info('incParent: ' + incParent + ', currentUserSysId: ' + currentUserSysId + ', after_rfi: ' + after_rfi + ', rfi_recipient: ' + rfi_recipient + ', previous_approver: ' + previous_approver +', comment: ' + comment);

        // Update Parent Record
        var gr = new GlideRecord('x_1040502_eso_mo_0_eso_approval')
        if (gr.get(incParent)) {
            approvalGrp = gr.getValue('assignment_group')
            gr.setValue('state', 50);
            gr.setValue('after_rfi', after_rfi);


            if (rfi_recipient == 'applicant') {
                gr.setValue('assigned_to', gr.applicant_name);
            } else {
                gr.setValue('assigned_to', previous_approver);
            }
            if (after_rfi == 'start_from_beginning') {
                var now_GR = new GlideRecord("sys_flow_context");
                now_GR.addQuery("name", "eso");
                now_GR.addQuery('source_record', incParent);
                now_GR.addEncodedQuery('stateINWAITING');
                now_GR.query();
                while (now_GR.next()) {
                    sn_fd.FlowAPI.cancel(now_GR.getUniqueValue(), 'Cancelling this flow for redundant request');
                }
            } else {
                gr.setValue('pervious_approvers', currentUserSysId);
            }
            gr.update();
        }

        // Get Created On

        var grApproval = new GlideRecord('sysapproval_approver')
        grApproval.addQuery('sysapproval', incParent);
        grApproval.addQuery('approver', previous_approver)
        grApproval.orderByDesc('sys_created_on');
        grApproval.setLimit(1);
        grApproval.query();
        if (!grApproval.next()) {
            gs.info("Unable to create Approval History sysapproval_approver");
            return;
        }

        var approvalCreatedOn = grApproval.sys_created_on;

        // Get level
        var level = this.getLevel(incParent, approvalGrp);

        gs.info("Level: " + level)

        var grApprovalHistory = new GlideRecord('x_1097202_epos_approval_history');
        grApprovalHistory.initialize();
        grApprovalHistory.setValue('parent', incParent);
        grApprovalHistory.setValue('level', level);
        grApprovalHistory.setValue('approval_group', approvalGrp);
        grApprovalHistory.setValue('decision_date_time', new GlideDateTime());
        grApprovalHistory.setValue('decision_taken', 'RFI');
        grApprovalHistory.setValue('comment', comment);
        grApprovalHistory.setValue('x_1040502_eso_mo_0_assign_date_time', approvalCreatedOn);
        grApprovalHistory.setValue('approver', currentUserSysId);
        grApprovalHistory.insert();

    },

    handleRFIResponse: function() {
        try {
            var incParent = this.getParameter('sysparm_inc_parent');
            var comment = this.getParameter('sysparm_inc_comments');
            gs.info('incParent: ' + incParent + ', comment: ' + comment);
            var gr = new GlideRecord('x_1040502_eso_mo_0_eso_approval')
            if (!gr.get(incParent)) {
                gs.info('Record Not Found');
                return;
            }
            var afterRfi = gr.getValue('after_rfi');
            var level = gr.getValue('assigned_to') == gr.getValue('applicant_name') ? '0' : this.getLevel(incParent, gr.getValue('assignment_group'))
            var approvalCreatedOn = gr.getValue('sys_updated_on');
            var approvalGrp = gr.getValue('assigned_to') == gr.getValue('applicant_name') ? '' : gr.setValue('assignment_group');
            gr.setValue('state', -5);
            gr.setValue('work_notes', comment);
            if (afterRfi == 'send_back_to_me') {
                gr.setValue('assigned_to', gr.pervious_approvers);
            }
            gr.update();

            // create approval history



            var grApprovalHistory = new GlideRecord('x_1097202_epos_approval_history');
            grApprovalHistory.initialize();
            grApprovalHistory.setValue('parent', incParent);
            grApprovalHistory.setValue('level', level);
            grApprovalHistory.setValue('approval_group', approvalGrp);
            grApprovalHistory.setValue('decision_date_time', new GlideDateTime());
            grApprovalHistory.setValue('decision_taken', 'RFI Response');
            grApprovalHistory.setValue('comment', comment);
            grApprovalHistory.setValue('x_1040502_eso_mo_0_assign_date_time', approvalCreatedOn);
            grApprovalHistory.setValue('approver', gs.getUserID());
            grApprovalHistory.insert();
        } catch (err) {
            console.log(err)
        }
    },

    getLevel: function(parentId, approvalGrp) {
        var grRoutingPreview = new GlideRecord('x_1040502_eso_mo_0_approval_routing_previews');
        grRoutingPreview.addQuery('parent', parentId);
        grRoutingPreview.addQuery('approval_group', approvalGrp)
        grRoutingPreview.setLimit(1);
        grRoutingPreview.query();
        if (!grRoutingPreview.next()) {
            gs.info("Unable to create Approval History x_1040502_eso_mo_0_approval_routing_previews");
            return;
        }
        return grRoutingPreview.getValue('level');

    }

});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-02-10 16:57:23</sys_created_on>
        <sys_id>fd2a3d0bc3e79250945e9e1d0501316b</sys_id>
        <sys_mod_count>78</sys_mod_count>
        <sys_name>RFIHandler</sys_name>
        <sys_package display_value="eSO Mockup" source="x_1040502_eso_mo_0">2a930f88c3211210945e9e1d05013139</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="eSO Mockup">2a930f88c3211210945e9e1d05013139</sys_scope>
        <sys_update_name>sys_script_include_fd2a3d0bc3e79250945e9e1d0501316b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-02-25 04:25:21</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>fd2a3d0bc3e79250945e9e1d0501316b</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-02-10 16:57:23</sys_created_on>
        <sys_id>26ea710fc3e79250945e9e1d050131b4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-02-10 16:57:23</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
